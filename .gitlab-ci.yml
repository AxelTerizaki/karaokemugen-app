image: axelterizaki/karaokemugen-ci:node-12

variables:
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  key: km-app-${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - systempanel/node_modules/
    - frontend/node_modules/
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

stages:
  - test
  - build
  - package
  - deploy

test:
  stage: test
  retry:
    max: 2
  interruptible: true
  services:
    - postgres:10.6
  variables:
    POSTGRES_USER: karaokemugen_app
    POSTGRES_PASSWORD: musubi
  script:
    - yarn install --check-files --force
    - yarn installSystemPanel --check-files --force
    - yarn installFrontend --check-files --force
    - touch mpv
    - cp -f config.CICD.yml config.yml
    - cp -f database.CICD.json database.json
    - export LANG=en_US
    - node --version
    - node util/extUnaccent.js
    - yarn startNoElectron --debug --test &disown
    - bash test/run.sh
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

build:
  stage: build
  interruptible: true
  artifacts:
    expire_in: 2 hours
    name: km-app-build-${CI_COMMIT_REF_SLUG}
    paths:
    - systempanel/build/
    - dist/
    - frontend/build/
  script:
    - npm install -g parcel-bundler
    - yarn build
    - yarn buildSystemPanel
    - yarn buildFrontend
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

pkg_linux:
  stage: package
  image: electronuserland/builder:latest
  interruptible: true
  artifacts:
    expire_in: 2 hours
    name: km-app-pkglinux-${CI_COMMIT_REF_SLUG}
    paths:
      - release
  dependencies:
    - build
  script:
    - export ELECTRON_CACHE=$HOME/.cache/electron
    - export ELETCRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - ./node_modules/.bin/electron-builder -l --publish always
    - ls -la packages/
    - mkdir release
    - mv packages/* release
    - cd release
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

pkg_win:
  stage: package
  image: electronuserland/builder:wine-mono
  interruptible: true
  artifacts:
    expire_in: 2 hours
    name: km-app-pkgwin-${CI_COMMIT_REF_SLUG}
    paths:
      - release
  dependencies:
    - build
  script:
    - export ELECTRON_CACHE=$HOME/.cache/electron
    - export ELETCRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - apt-get update -qq && apt-get install -y -qq zip
    - wget -qO- http://mugen.karaokes.moe/downloads/dist_win-3.2.tar.gz | tar xvz
    - ./node_modules/.bin/electron-builder -w --publish always
    - ls -la packages/
    - mkdir release
    - mv packages/*.exe release
    - mv packages/*.yml release
    - touch portable
    - zip -rv packages/*.zip portable
    - mv packages/*.zip release
    - cd release
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

pkg_mac:
  stage: package
  tags:
    - macos
  interruptible: true
  artifacts:
    expire_in: 2 hours
    name: km-app-pkgwin-${CI_COMMIT_REF_SLUG}
    paths:
      - release
  dependencies:
    - build
  variables:
    CSC_IDENTITY_AUTO_DISCOVERY: "false"
  script:
    - export ELECTRON_CACHE=$HOME/.cache/electron
    - export ELETCRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - wget -qO- http://mugen.karaokes.moe/downloads/dist_mac-3.2.tar.gz | tar xvz
    - ./node_modules/.bin/electron-builder -m
    - ls -la packages/
    - mkdir release
    - mv packages/*.dmg release/
    - cd release
    - mv * KaraokeMugen-$CI_COMMIT_REF_NAME.dmg
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

deploy_mac:
  stage: deploy
  interruptible: true
  dependencies:
    - pkg_mac
  script:
    - ls -la release/*
    - lftp -c "set cmd:fail-exit yes; set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; cd site/downloads; put release/KaraokeMugen-$CI_COMMIT_REF_NAME.dmg"
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

deploy_win:
  stage: deploy
  interruptible: true
  dependencies:
    - pkg_win
  script:
    - ls -la release/*
    - lftp -c "set cmd:fail-exit yes; set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; cd site/downloads; mput release/*"
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app

deploy_linux:
  stage: deploy
  interruptible: true
  dependencies:
    - pkg_linux
  script:
    - ls -la release/*
    - lftp -c "set cmd:fail-exit yes; set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; cd site/downloads; mput release/*"
  only:
    - master
    - next
    - tags
    - 7-creer-un-systeme-de-mise-a-jour-de-l-app